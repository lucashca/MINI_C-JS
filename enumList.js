

const ENUM_TOKENS = {

    INSTANCE_OF_INT: 'INSTANCE_OF_INT',
    INSTANCE_OF_FLOAT: 'INSTANCE_OF_FLOAT',
    INSTANCE_OF_BOOL: 'INSTANCE_OF_BOOL',
    INSTANCE_OF_CHAR_SIMPLE: 'INSTANCE_OF_CHAR_SIMPLE',
    INSTANCE_OF_CHAR_MULTPLE: 'INSTANCE_OF_CHAR_MULTPLE',

    TYPE_INT: 'TYPE_INT',
    TYPE_BOOL: 'TYPE_BOOL',
    TYPE_FLOAT: 'TYPE_FLOAT',
    TYPE_CHAR: 'TYPE_CHAR',
    TYPE_VOID: 'TYPE_VOID',

    COMMAND_IF: 'COMMAND_IF',
    COMMAND_FOR: 'COMMAND_FOR',
    COMMAND_WHILE: 'COMMAND_WHILE',
    COMMAND_DO: 'COMMAND_DO',
    COMMAND_BREAK: 'COMMAND_BREAK',
    COMMAND_CONTINUE: 'COMMAND_CONTINUE',
    COMMAND_SCANF: 'COMMAND_SCANF',
    COMMAND_PRINTF: 'COMMAND_PRINTF',
    COMMAND_INCLUDE: 'COMMAND_INCLUDE',
    COMMAND_RETURN: 'COMMAND_RETURN',
    COMMAND_ELSE: 'COMMAND_ELSE',

    IDENTIFIER_MAIN: 'IDENTIFIER_MAIN',
    IDENTIFIER_VARIABLES: 'IDENTIFIER_VARIABLES',
    IDENTIFIER_POINTER_VARIABLE: 'IDENTIFIER_POINTER_VARIABLE',
    IDENTIFIER_POINTER_ADDRESS: 'IDENTIFIER_POINTER_ADDRESS',

    OPERATOR_ARITHMETIC_PLUS: 'OPERATOR_ARITHMETIC_PLUS',
    OPERATOR_ARITHMETIC_LESS: 'OPERATOR_ARITHMETIC_LESS',
    OPERATOR_ARITHMETIC_MULTIPLICATION: 'OPERATOR_ARITHMETIC_MULTIPLICATION',
    OPERATOR_ARITHMETIC_DIVISION: 'OPERATOR_ARITHMETIC_DIVISION',
    OPERATOR_ARITHMETIC_DIV: 'OPERATOR_ARITHMETIC_DIV',
    OPERATOR_ARITHMETIC_MOD: 'OPERATOR_ARITHMETIC_MOD',
    OPERATOR_COMPARISON_LESS_THEN: 'OPERATOR_COMPARISON_LESS_THEN',
    OPERATOR_COMPARISON_MORE_THEN: 'OPERATOR_COMPARISON_MORE_THEN',
    OPERATOR_COMPARISON_LESS_EQUAL: 'OPERATOR_COMPARISON_LESS_EQUAL',
    OPERATOR_COMPARISON_MORE_EQUAL: 'OPERATOR_COMPARISON_MORE_EQUAL',
    OPERATOR_COMPARISON_DIFFERENT: 'OPERATOR_COMPARISON_DIFFERENT',
    OPERATOR_COMPARISON_EQUAL: 'OPERATOR_COMPARISON_EQUAL',
    OPERATOR_ATRIBUTION_EQUAL: 'OPERATOR_ATRIBUTION_EQUAL',
    OPERATOR_NEGATION: 'OPERATOR_NEGATION',
    OPERATOR_LOGICAL_AND: 'OPERATOR_LOGICAL_AND',
    OPERATOR_LOGICAL_OR: 'OPERATOR_LOGICAL_OR',
    OPERATOR_UNARY_PIPE: 'OPERATOR_UNARY_PIPE',
    OPERATOR_UNARY_E: 'OPERATOR_UNARY_E',

    DELIMITER_BLOCK_LEFT_BRACKET: 'DELIMITER_BLOCK_LEFT_BRACKET',
    DELIMITER_BLOCK_LEFT_BRACE: 'DELIMITER_BLOCK_LEFT_BRACE',
    DELIMITER_BLOCK_LEFT_PARENTHESES: 'DELIMITER_BLOCK_LEFT_PARENTHESES',
    DELIMITER_BLOCK_RIGHT_BRACKET: 'DELIMITER_BLOCK_RIGHT_BRACKET',
    DELIMITER_BLOCK_RIGHT_BRACE: 'DELIMITER_BLOCK_RIGHT_BRACE',
    DELIMITER_BLOCK_RIGHT_PARENTHESES: 'DELIMITER_BLOCK_RIGHT_PARENTHESES',
    DELIMITER_END_LINE: 'DELIMITER_END_LINE',
    DELIMITER_HASHTAG: 'DELIMITER_HASHTAG',
    DELIMITER_COMMA: 'DELIMITER_COMMA',
    DELIMITER_DOT: 'DELIMITER_DOT',
    DELIMITER_DOT_COMMA: 'DELIMITER_DOT_COMMA',
    COMMENT_SIMPLE: 'COMMENT_SIMPLE',
    COMMENT_MULTIPLE: 'COMMENT_MULTIPLE',

    INCLUDE_CONTENT: 'INCLUDE_CONTENT'

}

const STATEMENTS_ENUM = {
    VARIABLE: 'VariableStatement',
    VARIABLE_ATRIBUITION:'VariableStatementAtribuition',
    VARIABLE_ATRIBUITION_SIMPLE:'VariableStatementAtribuitionSimple',
    VARIABLE_ATRIBUITION_ARRAY_SIMPLE:'VariableStatementAtribuitionArraySimple',
    VARIABLE_ARRAY_SIMPLE:'VariableStatementArray',
    VARIABLE_SIMPLE:'VariableStatementSimple',
    VARIABLE_LIST:'VariableStatementList',
    DO_WHILE: 'DoWhileStatement',
    IF: 'IfStatement',
    EQUATION:'Equation',
    EXPRESSION_UNIT:'ExpressionUnit'
    
    
}


const IDENTIFIER = [
    ENUM_TOKENS.IDENTIFIER_VARIABLES,
    ENUM_TOKENS.IDENTIFIER_POINTER_VARIABLE,
    ENUM_TOKENS.IDENTIFIER_POINTER_ADDRESS,
];





module.exports = {    
    ENUM_TOKENS:ENUM_TOKENS,
    STATEMENTS_ENUM:STATEMENTS_ENUM,
    IDENTIFIER:IDENTIFIER
}